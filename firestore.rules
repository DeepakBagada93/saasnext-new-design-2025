rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role
    function isAdmin() {
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Clients collection: Only admins can read/list clients
    match /clients/{clientId} {
      allow read, list: if isAdmin();
      // Allow write for admins, or if you have a client creation flow
      allow write: if isAdmin(); 
    }

    // Projects collection: Admins have full access, clients can only access their own
    match /projects/{projectId} {
      allow read: if isAdmin() || isOwner(resource.data.userId);
      // Only admins can create, update, or delete projects directly
      allow write: if isAdmin();
      
      // Clients can query for their own projects
      allow list: if isAdmin() || (request.query.limit <= 10 && request.query.filters.size() == 1 && request.query.filters[0].field == "userId" && request.query.filters[0].value == request.auth.uid);
    }
    
    // Invoices collection: Admins have full access, clients can only access their own
    match /invoices/{invoiceId} {
       allow read: if isAdmin() || isOwner(resource.data.userId);
       // Only admins can create/update invoices
       allow write: if isAdmin();
       
       // Clients can query for their own invoices
       allow list: if isAdmin() || (request.query.limit <= 10 && request.query.filters.size() == 1 && request.query.filters[0].field == "userId" && request.query.filters[0].value == request.auth.uid);
    }

    // Service Requests: Any authenticated user can create a request. Only admins can read/delete them.
    match /serviceRequests/{requestId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, delete: if isAdmin();
      allow list: if isAdmin();
    }
    
    // Meeting Requests: Any authenticated user can create a request. Admins can manage them.
    match /meetingRequests/{requestId} {
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
       allow read, update, list: if isAdmin();
    }
  }
}
