rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Admin-specific email
    function isAdmin() {
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }

    // Check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Clients collection
    match /clients/{clientId} {
      allow read, write: if isAdmin();
    }
    
    // Invoices collection
    match /invoices/{invoiceId} {
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow list: if isAdmin();
        // Clients should not be able to create/update/delete invoices directly
    }

    // Projects collection
    match /projects/{projectId} {
      allow get: if isOwner(resource.data.userId) || isAdmin();
      // Allow clients to list their own projects, and admins to list all projects.
      allow list: if isAdmin() || (request.query.where.size() > 0 && request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid);
      allow create, update: if isAdmin();
    }

    // Meeting Requests collection
    match /meetingRequests/{requestId} {
      allow create: if request.auth != null; // Any authenticated user can create a request
      allow read, list, update: if isAdmin(); // Only admins can read/list/update requests
    }
    
    // Service Requests collection
    match /serviceRequests/{requestId} {
        allow create: if request.auth != null;
        allow read, list, delete: if isAdmin() || isOwner(resource.data.userId);
    }
  }
}
