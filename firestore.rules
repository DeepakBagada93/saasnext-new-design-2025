
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Replace with your actual admin email
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // CLIENTS:
    // Admins can read/write all client data.
    // Users can create their own client profile during registration.
    // Users can read/write their own client profile.
    match /clients/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create, delete: if isAdmin();
      allow create: if isOwner(userId); // For user registration
    }
    match /clients/{clientId} {
       allow read, list, create, delete: if isAdmin();
    }


    // PROJECTS:
    // Admins can read/write all projects.
    // Users can only read projects assigned to them.
    match /projects/{projectId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if isAdmin();
    }

    // SERVICE REQUESTS:
    // Admins can read/write all service requests.
    // Users can create their own service requests.
    // Users can read their own service requests.
    match /serviceRequests/{requestId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow write: if isAdmin();
    }
    
    // QUOTATIONS:
    // Admins can read/write all quotations.
    // Users can only read quotations assigned to them.
    match /quotations/{quotationId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if isAdmin();
    }

    // MEETING REQUESTS:
    // Admins can read/write all meeting requests.
    // Users can create their own meeting requests.
    // Users can read their own meeting requests.
    match /meetingRequests/{requestId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow write: if isAdmin();
    }
  }
}
