rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }

    // A user can read/write their own client document
    // An admin can read/write any client document
    match /clients/{userId} {
      allow get, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    // Admins can list all clients
    match /clients {
       allow list: if isAdmin();
    }

    // A user can create service requests for themselves
    // An admin can manage all service requests
    match /serviceRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, write: if isAdmin();
      // Users can only read their own requests
      allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Admins can manage all projects
    // Users can only read their own projects
    match /projects/{projectId} {
      allow read, write: if isAdmin();
      allow read: if request.auth.uid == resource.data.userId;
    }

    // Invoices can be managed by admins
    // Users can only read their own invoices
    match /invoices/{invoiceId} {
       allow read, write: if isAdmin();
       allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Users can create meeting requests
    // Admins can read and update all meeting requests
    match /meetingRequests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if isAdmin();
    }
     match /meetingRequests {
        allow list: if isAdmin();
    }
  }
}
