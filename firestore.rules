rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }

    // CLIENTS: Admins can manage all clients. Clients can read and update their own profiles.
    match /clients/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId || isAdmin();
    }
    
    // PROJECTS: Admins can manage all projects. Clients can only read their own projects.
    match /projects/{projectId} {
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      allow write: if isAdmin();
    }
    
    // SERVICE REQUESTS: Clients can create requests. Admins can read and delete them.
    match /serviceRequests/{requestId} {
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      allow create: if request.auth.uid != null;
      allow delete: if isAdmin();
      allow update: if isAdmin();
    }
    
    // QUOTATIONS: Admins can manage all quotations. Clients can read their own.
    match /quotations/{quotationId} {
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      allow write: if isAdmin();
    }
    
    // MEETING REQUESTS: Clients can create requests. Admins can read and update them.
    match /meetingRequests/{meetingId} {
       allow read: if resource.data.userId == request.auth.uid || isAdmin();
       allow create: if request.auth.uid != null;
       allow update: if isAdmin();
       allow delete: if isAdmin();
    }
  }
}
