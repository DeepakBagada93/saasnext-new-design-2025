rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.email == "deepakbagada25@gmail.com";
    }

    // CLIENTS:
    // - Authenticated users can create their own client document.
    // - Authenticated users can read/update their own client document.
    // - Admins can read, list, and delete any client document.
    match /clients/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow list, delete: if isAdmin();
    }

    // PROJECTS:
    // - Admins can create and update projects.
    // - Authenticated users can read projects assigned to them.
    match /projects/{projectId} {
      allow create, update: if isAdmin();
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // SERVICE REQUESTS:
    // - Authenticated users can create their own service requests.
    // - Clients can read their own service requests.
    // - Admins can read, list, and delete any service request.
    match /serviceRequests/{requestId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow list, delete: if isAdmin();
    }
    
    // MEETING REQUESTS:
    // - Authenticated users can create their own meeting requests.
    // - Admins can read, list, and update any meeting request.
    match /meetingRequests/{requestId} {
        allow create: if request.auth != null;
        allow read, update, list: if isAdmin();
    }
    
    // INVOICES:
    // - Admins can manage all invoices.
    // - Authenticated users can read invoices assigned to them.
    match /invoices/{invoiceId} {
        allow read, write: if isAdmin();
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}