rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins collection
    match /admins/{adminId} {
      allow read, write: if false; // Should be managed from the console
    }

    // Clients Collection
    // - Users can create their own client doc on registration.
    // - Users can read and update their own client doc.
    // - Admins can read any client doc.
    match /clients/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth.uid == userId;
      allow list: if isAdmin();
    }
    
    // Service Requests Collection
    // - Authenticated users can create requests.
    // - Users can read their own requests.
    // - Admins can read and delete all requests.
    match /serviceRequests/{requestId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow list, delete: if isAdmin();
    }

    // Meeting Requests Collection
    // - Authenticated users can create requests.
    // - Users can read their own requests.
    // - Admins can read, list, and update all requests.
    match /meetingRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update: if isAdmin() || (request.auth.uid == resource.data.userId);
      allow list: if isAdmin();
    }
    
    // Projects Collection
    // - Only admins can create, update, or delete projects.
    // - Clients can read projects assigned to them.
    // - Admins can read all projects.
    match /projects/{projectId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow list: if isAdmin() || (request.query.where.size() > 0 && request.query.where[0][1] == 'userId');
      allow create, update, delete: if isAdmin();
    }
    
    // Invoices Collection
    // - Only admins can create, update, or delete invoices.
    // - Clients can read invoices assigned to them.
    // - Admins can read all invoices.
    match /invoices/{invoiceId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow list: if isAdmin() || (request.query.where.size() > 0 && request.query.where[0][1] == 'userId');
      allow create, update, delete: if isAdmin();
    }
  }
}